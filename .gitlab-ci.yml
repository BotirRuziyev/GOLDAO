
stages:
  - build
  - deploy
  - notify

variables:
  #PROJECT_NAME: "[VRSpy:Frontend]"
  REGISTRY_URL: https://$DOCKER_REGISTRY
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

build-develop:
  image: docker:26.1.3
  only:
    - main
  stage: build
  variables:
    CI_REGISTRY_IMAGE_TAG: dev
    BASE_URL: https://api.goldao.org
  services:
    - name: registry.hub.docker.com/library/docker:26.1.3-dind
      entrypoint: [ "env", "-u", "DOCKER_HOST" ]
      command: [ "dockerd-entrypoint.sh", "--tls=false" ]
      alias: docker
  before_script:
    - apk add --update yarn
  script:
    #- sh .ci-notify.sh "$PROJECT_NAME Start build job"
    - yarn --production=false && yarn build
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t "$CI_REGISTRY_IMAGE":"$CI_REGISTRY_IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE":"$CI_REGISTRY_IMAGE_TAG"
    #- sh .ci-notify.sh "$PROJECT_NAME End build job✅"

deploy-develop:
  image: dtzar/helm-kubectl
  only:
    - main
  stage: deploy
  variables:
    CI_REGISTRY_IMAGE_TAG: dev
    APP: goldao-dev-web
    NAMESPACE: default
  script:
    #- sh .ci-notify.sh "Start deploy site"
    - envsubst < deployment.tpl.yaml > deployment.yaml
    - kubectl config set-cluster k8s --server="${SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY_DATA}
    - kubectl config set-credentials gitlab
    - kubectl config set users.gitlab.client-certificate-data ${CLIENT_CERTIFICATE_DATA}
    - kubectl config set users.gitlab.client-key-data ${CLIENT_KEY_DATA}
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - kubectl apply -f deployment.yaml
    - kubectl rollout restart deploy $APP -n ${NAMESPACE}
    #- sh .ci-notify.sh "Deploy site VRSPY finish ✅"

build-master:
  image: docker:26.1.3
  only:
    - master
  stage: build
  variables:
    NODE_ENV: production
    CI_REGISTRY_IMAGE_TAG: latest
    BASE_URL: https://api.goldao.org
    FILES_URL: https://s.goldao.org
  services:
    - name: registry.hub.docker.com/library/docker:26.1.3-dind
      entrypoint: [ "env", "-u", "DOCKER_HOST" ]
      command: [ "dockerd-entrypoint.sh", "--tls=false" ]
      alias: docker
  before_script:
    - apk add --update yarn
  script:
    #- sh .ci-notify.sh "$PROJECT_NAME Start build job"
    - yarn --production=false && yarn build
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t "$CI_REGISTRY_IMAGE":"$CI_REGISTRY_IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE":"$CI_REGISTRY_IMAGE_TAG"
    #- sh .ci-notify.sh "$PROJECT_NAME End build job✅"

deploy-master:
  image: dtzar/helm-kubectl
  only:
    - master
  stage: deploy
  variables:
    CI_REGISTRY_IMAGE_TAG: latest
    APP: goldao-web
    NAMESPACE: default
  script:
    #- sh .ci-notify.sh "Start deploy site"
    - envsubst < deployment.tpl.yaml > deployment.yaml
    - kubectl config set-cluster k8s --server="${SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY_DATA}
    - kubectl config set-credentials gitlab
    - kubectl config set users.gitlab.client-certificate-data ${CLIENT_CERTIFICATE_DATA}
    - kubectl config set users.gitlab.client-key-data ${CLIENT_KEY_DATA}
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    # - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" deployment.yaml
    - kubectl apply -f deployment.yaml
    - kubectl rollout restart deploy $APP -n ${NAMESPACE}
    #- sh .ci-notify.sh "Deploy site VRSPY finish ✅"

#notify_error:
#  stage: notify
#  before_script:
#    - apk add --update curl && rm -rf /var/cache/apk/*
#  script:
#    - sh .ci-notify.sh ❌
#  when: on_failure #deploy fail
